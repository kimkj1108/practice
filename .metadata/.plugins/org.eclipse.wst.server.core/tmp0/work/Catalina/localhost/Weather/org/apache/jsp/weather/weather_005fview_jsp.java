/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2021-05-28 01:56:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.weather;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.w3c.dom.*;
import javax.xml.parsers.*;
import java.util.*;

public final class weather_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("org.w3c.dom");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.xml.parsers");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");

      out.write('\r');
      out.write('\n');

	response.setContentType("text/html; charset=UTF-8");

      out.write("\r\n");
      out.write("<!-- import칸에 에러 뜨는 경우는 이클립스 에러다. -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\r\n");
      out.write("<title>날씨 확인 페이지.</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("body{\r\n");
      out.write("background-color: rgb(245,245,245);\r\n");
      out.write("}\r\n");
      out.write(".outer_box{\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth: 625px;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tbottom: 130px;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".inner_box{\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth: 206px;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("#select_box{\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\tpadding-top: 100px;\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\twidth: 300px;\r\n");
      out.write("\theight: 10px;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\ttop: 200px;\r\n");
      out.write("\tright: 0px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("#selected{\r\n");
      out.write("\twidth: 150px;\r\n");
      out.write("\theight: 26px;\r\n");
      out.write("\tfont-size: 18px;\r\n");
      out.write("\tcolor: salmon;\r\n");
      out.write("\tbackground-color: white;\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("#wehater_button{\r\n");
      out.write("\twidth: 150px;\r\n");
      out.write("\theight: 26px;\r\n");
      out.write("\tborder-radius: 10px;\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\tbackground-color: salmon;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction whereSelected() {//선택한 옵션의 value만 추출한다. 그리고 그걸 서블릿으로 보낸다.\r\n");
      out.write("\t\tvar selected = document.getElementId(\"selected\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar selectValue = selected.options[selected.selectedIndex].value;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar selectText = selected.options[selected.selectedIndex].text;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<form action=\"/Weather/Weather.do\" method=\"post\" name=\"command\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"command\" value=\"weather_view\"/>\r\n");
      out.write("\t\t<div id=\"select_box\">\r\n");
      out.write("\t\t\t<select id=\"selected\" name=\"where\" onchange=\"whereSelected()\"><!-- 옵션선택시 해당  -->\r\n");
      out.write("\t\t\t\t<option value=\"4215052000\" label=\"강릉\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4215052000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"2917060200\" label=\"광주\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '2917060200' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"2714059000\" label=\"대구\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '2714059000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"3020054000\" label=\"대전\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '3020054000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"4611055400\" label=\"목포\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4611055400' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"2611053000\" label=\"부산\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '2611053000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"1159068000\" label=\"서울\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '1159068000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"4111356000\" label=\"수원\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4111356000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"4717062000\" label=\"안동\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4717062000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"4613057000\" label=\"여수\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4613057000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"3111058500\" label=\"울산\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '3111058500' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"2811058500\" label=\"인천\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '2811058500' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"4511357000\" label=\"전주\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4511357000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"4812552000\" label=\"창원\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4812552000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"4311374100\" label=\"청주\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4311374100' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"4211070500\" label=\"춘천\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4211070500' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"4711155000\" label=\"포항\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4711155000' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t\t<option value=\"4480025600\" label=\"홍성\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${where == '4480025600' ? 'selected=\"selected\"' : '' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></option>\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t<div><input id=\"wehater_button\" type=\"submit\" value=\"날씨보기\" ></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("\t");

	
	request.getAttribute("where");//온도도 표시해야 한다.온도표시하는것도 추가하자
		//XML 데이터를 호출할 URL
	//String zone = "4159026200";	//지역명...선택하면 값을 이곳에 주도록 설정할 예정...
	String url = "http://www.kma.go.kr/wid/queryDFSRSS.jsp?zone="+request.getAttribute("where");

	//서버에서리턴될 XML데이터의 엘리먼트 이름 배열
	//
	String[] fieldNames = { "temp", "wfKor", "wfEn", "pop", "hour", "day" };

	//각 게시물하나에 해당하는 XML 노드를 담을 리스트
	ArrayList<HashMap<String, String>> pubList = new ArrayList<HashMap<String, String>>();

	String wfKor = "";
	String imgWfKor = "";
	String wfTemp = "";

	String wfKor1 = "";
	String imgWfKor1 = "";
	String wfTemp1 = "";

	String wfKor2 = "";
	String imgWfKor2 = "";
	String wfTemp2 = "";

	//오늘 내일 모레 표현을 위한 빈 변수 준비.
	String day = "";
	String day1 = "";
	String day2 = "";

	//강수확률 표현을 위한 빈 변수. 강수확률 = pop
	String pop = "";
	String pop1 = "";
	String pop2 = "";
	
	//기온 표현을 위한 빈 변수.
	String temp= "";
	String temp1= "";
	String temp2= "";

	try {
		//XML파싱 준비
		DocumentBuilderFactory f = DocumentBuilderFactory.newInstance();
		DocumentBuilder b = f.newDocumentBuilder();

		//위에서 구성한 URL을 통해 XMl 파싱 시작
		Document doc = b.parse(url);
		doc.getDocumentElement().normalize();

		//서버에서 응답한 XML데이터를 data(발행문서 1개 해당)태그로 각각 나눔(파라미터로 요청한 size항목의 수만큼) //발표시간 기준으로 3시간 후 데이터 발표.
		NodeList items = doc.getElementsByTagName("data");

		//for 루프시작
		for (int i = 0; i < items.getLength(); i++) {
			//i번째 publication 태그를 가져와서
			Node n = items.item(i);

			Element e = (Element) n;
			HashMap<String, String> pub = new HashMap<String, String>();

			//for 루프 시작
			for (String name : fieldNames) {

		//"hour", "day", "temp", "tmx", "tmn", "sky", "pty", "wfKor"....에 해당하는 값을 XML 노드에서 가져옴		
		NodeList titleList = e.getElementsByTagName(name);
		
		Element titleElem = (Element) titleList.item(0);

		Node titleNode = titleElem.getChildNodes().item(0);

		// 가져온 XML 값을 맵에 엘리먼트 이름-값 쌍으로 넣음
		pub.put(name, titleNode.getNodeValue());
			}

			//데이터가 전부 들어간 맵을 리스트에 넣고 화면에 뿌릴 준비.
			pubList.add(pub);
		}
	} catch (Exception e) {
		e.printStackTrace();
	}
	//------------------------
	for (int i = 0; i < pubList.size(); i++) {
		HashMap<String, String> pub = pubList.get(i);

		String tmpWfKor = pub.get("wfKor");
		if (tmpWfKor == null)
			tmpWfKor = "";

		String tmpWfDay = pub.get("day");
		String tmpWfHour = pub.get("hour");
		String tmpTemp = pub.get("temp");

		String tmpImgWfKor = "ico01";//맑을때. ""안에 이미지넣으면 되려나..
		if (tmpWfKor.equals("구름 조금"))
			tmpImgWfKor = "ico02";
		else if (tmpWfKor.equals("구름 많음"))
			tmpImgWfKor = "ico03";
		else if (tmpWfKor.equals("흐림"))
			
			tmpImgWfKor = "ico04";
		else if (tmpWfKor.equals("비"))
			tmpImgWfKor = "ico05";
		else if (tmpWfKor.equals("눈/비"))
			tmpImgWfKor = "ico06";
		else if (tmpWfKor.equals("눈"))
			tmpImgWfKor = "ico07";

		//오늘 내일 모레 if문...
		String tmpday = "오늘";
		if (tmpWfDay.equals("1"))
			tmpday = "내일";
		else if (tmpWfDay.equals("2"))
			tmpday = "모레";

		String tmpWfTemp = pub.get("temp");

		String tmppop = pub.get("pop");

		//오늘날씨
		if (i == 0) {
			day = tmpday;
			wfKor = tmpWfKor;
			imgWfKor = tmpImgWfKor;
			wfTemp = tmpWfTemp;
			pop = tmppop;
			temp = tmpTemp;
		}
		//내일날씨.
		if (tmpWfDay.equals("1") && tmpWfHour.equals("9")) {
			day1 = tmpday;
			wfKor1 = tmpWfKor;
			imgWfKor1 = tmpImgWfKor;
			wfTemp1 = tmpWfTemp;
			pop1 = tmppop;
			temp1 = tmpTemp;

		}
		// 모레 날씨 정보 받기
		if (!tmpWfKor.equals("") && tmpWfDay.equals("2") && tmpWfHour.equals("3")) {
			day2 = tmpday;
			wfKor2 = tmpWfKor;
			imgWfKor2 = tmpImgWfKor;
			wfTemp2 = tmpWfTemp;
			pop2 = tmppop;
			temp2 = tmpTemp;

		}
		if (!tmpWfKor.equals("") && tmpWfDay.equals("2") && tmpWfHour.equals("6")) {
			day2 = tmpday;
			wfKor2 = tmpWfKor;
			imgWfKor2 = tmpImgWfKor;
			wfTemp2 = tmpWfTemp;
			pop2 = tmppop;
			temp2 = tmpTemp;
		}
		if (!tmpWfKor.equals("") && tmpWfDay.equals("2") && tmpWfHour.equals("9")) {
			day2 = tmpday;
			wfKor2 = tmpWfKor;
			imgWfKor2 = tmpImgWfKor;
			wfTemp2 = tmpWfTemp;
			pop2 = tmppop;
			temp2 = tmpTemp;
		}

	}
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"outer_box\">\r\n");
      out.write("\t\t<div class=\"inner_box\">\r\n");
      out.write("\t\t\t<div><h3><p>");
      out.print(day);
      out.write("의 날씨</p></h3></div>\r\n");
      out.write("\t\t\t<div>");
      out.print(wfKor);
      out.write("</div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<img src= \"/Weather/resources/image_weather2/");
      out.print(wfKor);
      out.write(".png\" width=\"150\" height=\"150\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div>기온: ");
      out.print(temp );
      out.write("&deg;C</div>\r\n");
      out.write("\t\t\t<div>강수확률: ");
      out.print(pop );
      out.write("%</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"inner_box\">\r\n");
      out.write("\t\t\t<div><h3><p>");
      out.print(day1);
      out.write("의 날씨</p></h3></div>\r\n");
      out.write("\t\t\t<div>");
      out.print(wfKor1);
      out.write("</div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<img src= \"/Weather/resources/image_weather2/");
      out.print(wfKor1);
      out.write(".png\" width=\"150\" height=\"150\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div>기온: ");
      out.print(temp1 );
      out.write("&deg;C</div>\r\n");
      out.write("\t\t\t<div>강수확률: ");
      out.print(pop1 );
      out.write("%</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"inner_box\">\r\n");
      out.write("\t\t\t<div><h3><p>");
      out.print(day2);
      out.write("의 날씨</p></h3></div>\r\n");
      out.write("\t\t\t<div>");
      out.print(wfKor2);
      out.write("</div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<img src= \"/Weather/resources/image_weather2/");
      out.print(wfKor2);
      out.write(".png\" width=\"150\" height=\"150\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div>기온: ");
      out.print(temp2 );
      out.write("&deg;C</div>\r\n");
      out.write("\t\t\t<div>강수확률: ");
      out.print(pop2 );
      out.write("%</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
